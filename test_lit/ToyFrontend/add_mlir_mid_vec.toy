# RUN: toy-translate %s -emit=mlir-mid -opt -lower-pat=vector 2>&1 | FileCheck %s

def funcInputs() {
  varf64 a<6> = [0];
  varf64 b<6> = [0];
  varf64 c<6> = [0];
}

def add_param_input_mid_vec(a, b, c) {
  varf64 d = a + b;
  store(d, c);
  return;
  # CHECK-LABEL: func.func @add_param_input_mid_vec(%arg0: memref<6xf64>, %arg1: memref<6xf64>, %arg2: memref<6xf64>) {
  # CHECK-NEXT:    %c0 = arith.constant 0 : index
  # CHECK-NEXT:    %0 = vector.load %arg0[%c0] : memref<6xf64>, vector<6xf64>
  # CHECK-NEXT:    %1 = vector.load %arg1[%c0] : memref<6xf64>, vector<6xf64>
  # CHECK-NEXT:    %2 = arith.addf %0, %1 : vector<6xf64>
  # CHECK-NEXT:    vector.store %2, %arg2[%c0] : memref<6xf64>, vector<6xf64>
  # CHECK-NEXT:    return
  # CHECK-NEXT:  }
}
