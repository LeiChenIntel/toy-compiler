# RUN: toy-translate %s -emit=mlir-mid 2>&1 | FileCheck %s

def funcInputs() {
  varf64 a<3> = [0];
  varf64 b<3> = [0];
  varf64 c<3> = [0];
}

def store_to_input_mid(a, b, c) {
  varf64 d = a + b;
  store(d, c);
  return;
  # CHECK-LABEL: func.func @store_to_input_mid(%arg0: memref<3xf64>, %arg1: memref<3xf64>, %arg2: memref<3xf64>) {
  # CHECK-NEXT:    affine.for %arg3 = 0 to 3 {
  # CHECK-NEXT:      %0 = affine.load %arg0[%arg3] : memref<3xf64>
  # CHECK-NEXT:      %1 = affine.load %arg1[%arg3] : memref<3xf64>
  # CHECK-NEXT:      %2 = arith.addf %0, %1 : f64
  # CHECK-NEXT:      affine.store %2, %arg2[%arg3] : memref<3xf64>
  # CHECK-NEXT:    }
  # CHECK-NEXT:    return
  # CHECK-NEXT:  }
}
